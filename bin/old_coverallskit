#!/usr/bin/env php
<?php

$files = [
    __DIR__ . '/../vendor/autoload.php',
    __DIR__ . '/../../../autoload.php'
];

$composerInstall = false;

foreach ($files as $file) {
    if (file_exists($file)) {
        require $file;
        $composerInstall = true;
        break;
    }
}

if (!$composerInstall) {
    echo 'You must set up the dependencies, run the following commands:'. PHP_EOL .
        'curl -s http://getcomposer.org/installer | php' . PHP_EOL .
        'php composer.phar install' . PHP_EOL;
    exit(1);
}

unset($composerInstall, $files, $file);

use coverallskit\Application;
use coverallskit\ConsoleWrapper;
use coverallskit\CommandFactory;
use coverallskit\command\InitializeCommand;
use coverallskit\command\ReportTransferCommand;
use coverallskit\command\HelpCommand;
use \Exception as CLIException;

$application = new Application(
    new CommandFactory([
        'init' => InitializeCommand::class,
        'transfer' => ReportTransferCommand::class,
        'help' => HelpCommand::class
    ]),
    new ConsoleWrapper
);

try {
    $application->run($argv, $_ENV);
} catch (CLIException $exception) {
    echo $exception->getMessage();
    exit(1);
}
exit(0);
