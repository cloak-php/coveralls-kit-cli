#!/usr/bin/env php
<?php

$configs = [
    [
        'autoloadFile' => __DIR__ . '/../vendor/autoload.php',
        'kernelPath' => dirname(__DIR__)
    ],
    [
        'autoloadFile' => __DIR__ . '/../../../autoload.php',
        'kernelPath' => realpath(__DIR__ . '/../../../../')
    ]
];

$composerInstall = false;

foreach ($configs as $config) {
    $file = $config['autoloadFile'];
    $kernelPath = $config['kernelPath'];

    if (file_exists($file)) {
        require $file;
        $composerInstall = true;
        break;
    }
}

if (!$composerInstall) {
    echo 'You must set up the dependencies, run the following commands:'. PHP_EOL .
        'curl -s http://getcomposer.org/installer | php' . PHP_EOL .
        'php composer.phar install' . PHP_EOL;
    exit(1);
}

unset($composerInstall, $files, $file);

use Aura\Di\ContainerBuilder;
use Aura\Project_Kernel\Project;
use Aura\Cli_Kernel\CliKernel;

require_once __DIR__ . '/../config/_env.php';

$project = new Project(
    $kernelPath,
    $_ENV['COVERALLS_KIT_CONFIG_MODE'],
    json_decode(file_get_contents("{$kernelPath}/composer.json")),
    json_decode(file_get_contents("{$kernelPath}/vendor/composer/installed.json"))
);

$builder = new ContainerBuilder();

$args = ['project' => $project];
$config = $project->getConfigClasses();

$di = $builder->newInstance($args, $config);
$kernel = $di->newInstance(CliKernel::class);

$status = $kernel();
exit($status);
